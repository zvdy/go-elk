// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Directdebitstatusvalues : >  * `Active` - The mandate is active.  * `Inactive` -   * `Created` -   * `PendingApproval` -   * `Cancelled` - The mandate is cancelled.  * `Expired` - The mandate has passed the end date.  * `Rejected` -   * `Completed` -   * `Archived` -   * `Failed` -   * `Suspended` - The mandate is put on hold.  
type Directdebitstatusvalues string

// List of Directdebitstatusvalues
const (
	ACTIVE Directdebitstatusvalues = "Active"
	INACTIVE Directdebitstatusvalues = "Inactive"
	CREATED Directdebitstatusvalues = "Created"
	PENDING_APPROVAL Directdebitstatusvalues = "PendingApproval"
	CANCELLED Directdebitstatusvalues = "Cancelled"
	EXPIRED Directdebitstatusvalues = "Expired"
	REJECTED Directdebitstatusvalues = "Rejected"
	COMPLETED Directdebitstatusvalues = "Completed"
	ARCHIVED Directdebitstatusvalues = "Archived"
	FAILED Directdebitstatusvalues = "Failed"
	SUSPENDED Directdebitstatusvalues = "Suspended"
)

// AllowedDirectdebitstatusvaluesEnumValues is all the allowed values of Directdebitstatusvalues enum
var AllowedDirectdebitstatusvaluesEnumValues = []Directdebitstatusvalues{
	"Active",
	"Inactive",
	"Created",
	"PendingApproval",
	"Cancelled",
	"Expired",
	"Rejected",
	"Completed",
	"Archived",
	"Failed",
	"Suspended",
}

// validDirectdebitstatusvaluesEnumValue provides a map of Directdebitstatusvaluess for fast verification of use input
var validDirectdebitstatusvaluesEnumValues = map[Directdebitstatusvalues]struct{}{
	"Active": {},
	"Inactive": {},
	"Created": {},
	"PendingApproval": {},
	"Cancelled": {},
	"Expired": {},
	"Rejected": {},
	"Completed": {},
	"Archived": {},
	"Failed": {},
	"Suspended": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Directdebitstatusvalues) IsValid() bool {
	_, ok := validDirectdebitstatusvaluesEnumValues[v]
	return ok
}

// NewDirectdebitstatusvaluesFromValue returns a pointer to a valid Directdebitstatusvalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDirectdebitstatusvaluesFromValue(v string) (Directdebitstatusvalues, error) {
	ev := Directdebitstatusvalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Directdebitstatusvalues: valid values are %v", v, AllowedDirectdebitstatusvaluesEnumValues)
}



// AssertDirectdebitstatusvaluesRequired checks if the required fields are not zero-ed
func AssertDirectdebitstatusvaluesRequired(obj Directdebitstatusvalues) error {
	return nil
}

// AssertDirectdebitstatusvaluesConstraints checks if the values respects the defined constraints
func AssertDirectdebitstatusvaluesConstraints(obj Directdebitstatusvalues) error {
	return nil
}
