// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Deviceoperatingsystemtypevalues : >  * `Android` - Android operating system.  * `Ios` - iOS operating system.  * `Windows` - Windows operating system.  * `Blackberry` - Blackberry operating system.  * `Tizen` - Tizen operating system.  * `Othernational` - Other nationally defined code.  * `Otherprivate` - Other privately defined code.  
type Deviceoperatingsystemtypevalues string

// List of Deviceoperatingsystemtypevalues
const (
	ANDROID Deviceoperatingsystemtypevalues = "Android"
	IOS Deviceoperatingsystemtypevalues = "Ios"
	WINDOWS Deviceoperatingsystemtypevalues = "Windows"
	BLACKBERRY Deviceoperatingsystemtypevalues = "Blackberry"
	TIZEN Deviceoperatingsystemtypevalues = "Tizen"
	OTHERNATIONAL Deviceoperatingsystemtypevalues = "Othernational"
	OTHERPRIVATE Deviceoperatingsystemtypevalues = "Otherprivate"
)

// AllowedDeviceoperatingsystemtypevaluesEnumValues is all the allowed values of Deviceoperatingsystemtypevalues enum
var AllowedDeviceoperatingsystemtypevaluesEnumValues = []Deviceoperatingsystemtypevalues{
	"Android",
	"Ios",
	"Windows",
	"Blackberry",
	"Tizen",
	"Othernational",
	"Otherprivate",
}

// validDeviceoperatingsystemtypevaluesEnumValue provides a map of Deviceoperatingsystemtypevaluess for fast verification of use input
var validDeviceoperatingsystemtypevaluesEnumValues = map[Deviceoperatingsystemtypevalues]struct{}{
	"Android": {},
	"Ios": {},
	"Windows": {},
	"Blackberry": {},
	"Tizen": {},
	"Othernational": {},
	"Otherprivate": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Deviceoperatingsystemtypevalues) IsValid() bool {
	_, ok := validDeviceoperatingsystemtypevaluesEnumValues[v]
	return ok
}

// NewDeviceoperatingsystemtypevaluesFromValue returns a pointer to a valid Deviceoperatingsystemtypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeviceoperatingsystemtypevaluesFromValue(v string) (Deviceoperatingsystemtypevalues, error) {
	ev := Deviceoperatingsystemtypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Deviceoperatingsystemtypevalues: valid values are %v", v, AllowedDeviceoperatingsystemtypevaluesEnumValues)
}



// AssertDeviceoperatingsystemtypevaluesRequired checks if the required fields are not zero-ed
func AssertDeviceoperatingsystemtypevaluesRequired(obj Deviceoperatingsystemtypevalues) error {
	return nil
}

// AssertDeviceoperatingsystemtypevaluesConstraints checks if the values respects the defined constraints
func AssertDeviceoperatingsystemtypevaluesConstraints(obj Deviceoperatingsystemtypevalues) error {
	return nil
}
