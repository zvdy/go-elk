// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// BQLienAPIService is a service that implements the logic for the BQLienAPIServicer
// This service should implement the business logic for every endpoint for the BQLienAPI API.
// Include any external packages or services that will be required by this service.
type BQLienAPIService struct {
}

// NewBQLienAPIService creates a default api service
func NewBQLienAPIService() *BQLienAPIService {
	return &BQLienAPIService{}
}

// ExchangeLien - EcBQ Accept, verify, etc. aspects of Lien processing
func (s *BQLienAPIService) ExchangeLien(ctx context.Context, leasingid string, lienid string, lien Lien) (ImplResponse, error) {
	// TODO - update ExchangeLien with the required logic for this service method.
	// Add api_bq_lien_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Lien{}) or use other options such as http.Ok ...
	// return Response(200, Lien{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ExchangeLien method not implemented")
}

// InitiateLien - InBQ Instantiate a new Lien
func (s *BQLienAPIService) InitiateLien(ctx context.Context, leasingid string, lien Lien) (ImplResponse, error) {
	// TODO - update InitiateLien with the required logic for this service method.
	// Add api_bq_lien_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Lien{}) or use other options such as http.Ok ...
	// return Response(200, Lien{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("InitiateLien method not implemented")
}

// RetrieveLien - ReBQ Retrieve details about any aspect of Lien
func (s *BQLienAPIService) RetrieveLien(ctx context.Context, leasingid string, lienid string) (ImplResponse, error) {
	// TODO - update RetrieveLien with the required logic for this service method.
	// Add api_bq_lien_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Lien{}) or use other options such as http.Ok ...
	// return Response(200, Lien{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveLien method not implemented")
}

// UpdateLien - UpBQ Update details relating to Lien
func (s *BQLienAPIService) UpdateLien(ctx context.Context, leasingid string, lienid string, lien Lien) (ImplResponse, error) {
	// TODO - update UpdateLien with the required logic for this service method.
	// Add api_bq_lien_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Lien{}) or use other options such as http.Ok ...
	// return Response(200, Lien{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateLien method not implemented")
}
