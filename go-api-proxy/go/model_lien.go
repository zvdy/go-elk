// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi




// Lien - The product features/services available with a financical facility
type Lien struct {

	LienAmount Amount `json:"LienAmount,omitempty"`

	LienPurpose Financialfacility `json:"LienPurpose,omitempty"`

	LienStatus Status `json:"LienStatus,omitempty"`

	LienProcessingOption Lienarrangementmodality `json:"LienProcessingOption,omitempty"`

	LienStartDate Datetime `json:"LienStartDate,omitempty"`

	LienType Text `json:"LienType,omitempty"`

	LienOriginator Involvedparty `json:"LienOriginator,omitempty"`

	LienDefinition Text `json:"LienDefinition,omitempty"`

	LienRecord Lientransaction `json:"LienRecord,omitempty"`

	LienExpiryDate Datetime `json:"LienExpiryDate,omitempty"`
}

// AssertLienRequired checks if the required fields are not zero-ed
func AssertLienRequired(obj Lien) error {
	if err := AssertAmountRequired(obj.LienAmount); err != nil {
		return err
	}
	if err := AssertFinancialfacilityRequired(obj.LienPurpose); err != nil {
		return err
	}
	if err := AssertStatusRequired(obj.LienStatus); err != nil {
		return err
	}
	if err := AssertLienarrangementmodalityRequired(obj.LienProcessingOption); err != nil {
		return err
	}
	if err := AssertDatetimeRequired(obj.LienStartDate); err != nil {
		return err
	}
	if err := AssertTextRequired(obj.LienType); err != nil {
		return err
	}
	if err := AssertInvolvedpartyRequired(obj.LienOriginator); err != nil {
		return err
	}
	if err := AssertTextRequired(obj.LienDefinition); err != nil {
		return err
	}
	if err := AssertLientransactionRequired(obj.LienRecord); err != nil {
		return err
	}
	if err := AssertDatetimeRequired(obj.LienExpiryDate); err != nil {
		return err
	}
	return nil
}

// AssertLienConstraints checks if the values respects the defined constraints
func AssertLienConstraints(obj Lien) error {
	if err := AssertAmountConstraints(obj.LienAmount); err != nil {
		return err
	}
	if err := AssertFinancialfacilityConstraints(obj.LienPurpose); err != nil {
		return err
	}
	if err := AssertStatusConstraints(obj.LienStatus); err != nil {
		return err
	}
	if err := AssertLienarrangementmodalityConstraints(obj.LienProcessingOption); err != nil {
		return err
	}
	if err := AssertDatetimeConstraints(obj.LienStartDate); err != nil {
		return err
	}
	if err := AssertTextConstraints(obj.LienType); err != nil {
		return err
	}
	if err := AssertInvolvedpartyConstraints(obj.LienOriginator); err != nil {
		return err
	}
	if err := AssertTextConstraints(obj.LienDefinition); err != nil {
		return err
	}
	if err := AssertLientransactionConstraints(obj.LienRecord); err != nil {
		return err
	}
	if err := AssertDatetimeConstraints(obj.LienExpiryDate); err != nil {
		return err
	}
	return nil
}
