// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// BQFeesAPIService is a service that implements the logic for the BQFeesAPIServicer
// This service should implement the business logic for every endpoint for the BQFeesAPI API.
// Include any external packages or services that will be required by this service.
type BQFeesAPIService struct {
}

// NewBQFeesAPIService creates a default api service
func NewBQFeesAPIService() *BQFeesAPIService {
	return &BQFeesAPIService{}
}

// ExchangeFees - EcBQ Accept, verify, etc. aspects of Fees processing
func (s *BQFeesAPIService) ExchangeFees(ctx context.Context, leasingid string, feesid string, fees Fees) (ImplResponse, error) {
	// TODO - update ExchangeFees with the required logic for this service method.
	// Add api_bq_fees_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Fees{}) or use other options such as http.Ok ...
	// return Response(200, Fees{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ExchangeFees method not implemented")
}

// InitiateFees - InBQ Instantiate a new Fees
func (s *BQFeesAPIService) InitiateFees(ctx context.Context, leasingid string, fees Fees) (ImplResponse, error) {
	// TODO - update InitiateFees with the required logic for this service method.
	// Add api_bq_fees_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Fees{}) or use other options such as http.Ok ...
	// return Response(200, Fees{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("InitiateFees method not implemented")
}

// RetrieveFees - ReBQ Retrieve details about any aspect of Fees
func (s *BQFeesAPIService) RetrieveFees(ctx context.Context, leasingid string, feesid string) (ImplResponse, error) {
	// TODO - update RetrieveFees with the required logic for this service method.
	// Add api_bq_fees_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Fees{}) or use other options such as http.Ok ...
	// return Response(200, Fees{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveFees method not implemented")
}

// RequestFees - RqBQ Request manual intervention or a decision with respect to Fees
func (s *BQFeesAPIService) RequestFees(ctx context.Context, leasingid string, feesid string, fees Fees) (ImplResponse, error) {
	// TODO - update RequestFees with the required logic for this service method.
	// Add api_bq_fees_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Fees{}) or use other options such as http.Ok ...
	// return Response(200, Fees{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RequestFees method not implemented")
}

// UpdateFees - UpBQ Update details relating to Fees
func (s *BQFeesAPIService) UpdateFees(ctx context.Context, leasingid string, feesid string, fees Fees) (ImplResponse, error) {
	// TODO - update UpdateFees with the required logic for this service method.
	// Add api_bq_fees_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Fees{}) or use other options such as http.Ok ...
	// return Response(200, Fees{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateFees method not implemented")
}
