// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Debitcreditindicatortvalues : >  * `Debit` - Transaction is a debt entry  * `Credit` - Transaction is a credit entry  
type Debitcreditindicatortvalues string

// List of Debitcreditindicatortvalues
const (
	DEBIT Debitcreditindicatortvalues = "Debit"
	CREDIT Debitcreditindicatortvalues = "Credit"
)

// AllowedDebitcreditindicatortvaluesEnumValues is all the allowed values of Debitcreditindicatortvalues enum
var AllowedDebitcreditindicatortvaluesEnumValues = []Debitcreditindicatortvalues{
	"Debit",
	"Credit",
}

// validDebitcreditindicatortvaluesEnumValue provides a map of Debitcreditindicatortvaluess for fast verification of use input
var validDebitcreditindicatortvaluesEnumValues = map[Debitcreditindicatortvalues]struct{}{
	"Debit": {},
	"Credit": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Debitcreditindicatortvalues) IsValid() bool {
	_, ok := validDebitcreditindicatortvaluesEnumValues[v]
	return ok
}

// NewDebitcreditindicatortvaluesFromValue returns a pointer to a valid Debitcreditindicatortvalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDebitcreditindicatortvaluesFromValue(v string) (Debitcreditindicatortvalues, error) {
	ev := Debitcreditindicatortvalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Debitcreditindicatortvalues: valid values are %v", v, AllowedDebitcreditindicatortvaluesEnumValues)
}



// AssertDebitcreditindicatortvaluesRequired checks if the required fields are not zero-ed
func AssertDebitcreditindicatortvaluesRequired(obj Debitcreditindicatortvalues) error {
	return nil
}

// AssertDebitcreditindicatortvaluesConstraints checks if the values respects the defined constraints
func AssertDebitcreditindicatortvaluesConstraints(obj Debitcreditindicatortvalues) error {
	return nil
}
