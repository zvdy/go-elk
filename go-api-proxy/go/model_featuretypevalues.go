// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Featuretypevalues : A Classification value that distinguishes between arrangements according to the type of business services within Leasing Arrangement ||  |
type Featuretypevalues string

// List of Featuretypevalues
const (
	FEE Featuretypevalues = "Fee"
	INTEREST Featuretypevalues = "Interest"
	WITHDRAWAL Featuretypevalues = "Withdrawal"
	DEPOSIT Featuretypevalues = "Deposit"
	SWEEP Featuretypevalues = "Sweep"
	LIEN Featuretypevalues = "Lien"
	PAYMENT Featuretypevalues = "Payment"
	REPAYMENT Featuretypevalues = "Repayment"
	LIMIT Featuretypevalues = "Limit"
	OVERDRAFT Featuretypevalues = "Overdraft"
	STATEMENT Featuretypevalues = "Statement"
	CURRENCY_EXCHANGE Featuretypevalues = "CurrencyExchange"
)

// AllowedFeaturetypevaluesEnumValues is all the allowed values of Featuretypevalues enum
var AllowedFeaturetypevaluesEnumValues = []Featuretypevalues{
	"Fee",
	"Interest",
	"Withdrawal",
	"Deposit",
	"Sweep",
	"Lien",
	"Payment",
	"Repayment",
	"Limit",
	"Overdraft",
	"Statement",
	"CurrencyExchange",
}

// validFeaturetypevaluesEnumValue provides a map of Featuretypevaluess for fast verification of use input
var validFeaturetypevaluesEnumValues = map[Featuretypevalues]struct{}{
	"Fee": {},
	"Interest": {},
	"Withdrawal": {},
	"Deposit": {},
	"Sweep": {},
	"Lien": {},
	"Payment": {},
	"Repayment": {},
	"Limit": {},
	"Overdraft": {},
	"Statement": {},
	"CurrencyExchange": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Featuretypevalues) IsValid() bool {
	_, ok := validFeaturetypevaluesEnumValues[v]
	return ok
}

// NewFeaturetypevaluesFromValue returns a pointer to a valid Featuretypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFeaturetypevaluesFromValue(v string) (Featuretypevalues, error) {
	ev := Featuretypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Featuretypevalues: valid values are %v", v, AllowedFeaturetypevaluesEnumValues)
}



// AssertFeaturetypevaluesRequired checks if the required fields are not zero-ed
func AssertFeaturetypevaluesRequired(obj Featuretypevalues) error {
	return nil
}

// AssertFeaturetypevaluesConstraints checks if the values respects the defined constraints
func AssertFeaturetypevaluesConstraints(obj Featuretypevalues) error {
	return nil
}
