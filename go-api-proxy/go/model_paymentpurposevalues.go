// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Paymentpurposevalues : >  * `Salarypayment` - Transaction is the payment of salaries.  * `Treasurypayment` - Transaction is related to treasury operations.  * `Advancepayment` - Transaction is an advance payment.  * `Agriculturaltransfer` - Transaction is related to the agricultural domain.  * `Alimonypayment` - Transaction is the payment of alimony.  * `Childbenefit` - Transaction is related to a payment made to assist parent/guardian to maintain child.  * `Unemploymentdisabilitybenefit` - Transaction is related to a payment to a person who is unemployed/disabled.  * `Bonuspayment.` - Transaction is related to payment of a bonus.  * `Cashmanagementtransfer` - Transaction is a general cash management instruction.  * `Capitalbuilding` - Transaction is related to capital building fringe fortune, ie capital building for retirement.  * `Charitypayment` - Transaction is a payment for charity reasons.  * `Collectionpayment` - Transaction is a collection of funds initiated via a credit transfer or direct debit.  * `Commoditytransfer` - Transaction is payment of commodities.  * `Commercialpayment` - Transaction is related to a payment of commercial credit or debit. (formerly CommercialCredit).  * `Commission` - Transaction is payment of commission.  * `Costs` - Transaction is related to payment of costs.  * `Copyright` - Transaction is payment of copyright.  * `Dividend` - Transaction is payment of dividends.  * `Foreignexchange` - Transaction is related to a foreign exchange operation.  * `Purchasesaleofgoods` - Transaction is related to purchase and sale of goods.  * `Governmentpayment` - Transaction is a payment to or from a government department.  * `Instalmenthirepurchaseagreement` - Transaction is payment for an installment/hire-purchase agreement.  * `Intracompanypayment` - Transaction is an intra-company payment, ie, a payment between two companies belonging to the same group.  * `Insurancepremium` - Transaction is payment of an insurance premium.  * `Interest` - Transaction is payment of interest.  * `Licensefee` - Transaction is payment of a license fee.  * `Loan` - Transaction is related to transfer of loan to borrower.  * `Loanrepayment` - Transaction is related to repayment of loan to lender.  * `Netting` - Transaction is related to a netting operation.  * `Payroll` - Transaction is related to the payment of payroll.  * `Pensionpayment` - Transaction is the payment of pension.  * `Refund` - Transaction is the payment of a refund.  * `Rent` - Transaction is the payment of rent.  * `Royalties` - Transaction is the payment of royalties.  * `Purchasesaleofservices` - Transaction is related to purchase and sale of services.  * `Securities` - Transaction is the payment of securities.  * `Socialsecuritybenefit` - Transaction is a social security benefit, ie payment made by a government to support individuals.  * `Subscription` - Transaction is related to a payment of information or entertainment services either in printed or electronic form.  * `Taxpayment` - Transaction is the payment of taxes.  * `Valueaddedtaxpayment` - Transaction is the payment of value added tax.  * `Consumerthirdpartyconsolidatedpayment` - Transaction is a payment used by a third party who can collect funds to pay on behalf of consumers, ie credit counseling or bill payment companies.  * `Debitcollectionpayment` - Collection of funds initiated via a debit transfer.  * `Supplierpayment` - Transaction is related to a payment to a supplier.  * `Hedging` - Transaction is related to a hedging operation.  * `Multipleservicetypes` - Transaction is related to a payment for multiple service types.  * `Nototherwisespecified` - Transaction is related to a payment for type of services not specified elsewhere.  * `Cardpayment` - Transaction is related to a payment of credit card account.  * `Creditcardbill` - Transaction is related to a payment of credit card bill.  * `Ferry` - Transaction is a payment for ferry related business.  * `Air` - Transaction is a payment for air transport related business.  * `Bus` - Transaction is a payment for bus transport related business.  * `Railway` - Transaction is a payment for railway transport related business.  * `Convalescentcarefacility` - Transaction is a payment for convalescence care facility services.  * `Dentalservices` - Transaction is a payment for dental services.  * `Anesthesiaservices` - Transaction is a payment for anesthesia services.  * `Homehealthcare` - Transaction is a payment for home health care services.  * `Hospitalcare` - Transaction is a payment for hospital care services.  * `Intermediatecarefacility` - Transaction is a payment for intermediate care facility services.  * `Longtermcarefacility` - Transaction is a payment for long-term care facility services.  * `Medicalservices` - Transaction is a payment for medical care services.  * `Visioncare` - Transaction is a payment for vision care services.  * `Durablemedicaleequipment` - Transaction is a payment is for use of durable medical equipment.  * `Cabletvbill` - Transaction is related to a payment of cable TV bill.  * `Electricitybill` - Transaction is related to a payment of electricity bill.  * `Gasbill` - Transaction is related to a payment of gas bill.  * `Telephonebill` - Transaction is related to a payment of telephone bill.  * `Othertelecomrelatedbill` - Transaction is related to a payment of other telecom related bill.  * `Waterbill` - Transaction is related to a payment of water bill.  * `Study` - Transaction is related to a payment of study/tuition costs.  * `Pricepayment` - Transaction is related to a payment of a price.  * `Installment` - Transaction is related to a payment of an installment.  * `Recurringinstallmentpayment` - Transaction is related to a payment of a recurring installment made at regular intervals.  * `Openingfee` - Transaction is related to a payment of opening fee.  * `Cancellationfee` - Transaction is related to a payment of cancellation fee.  * `Governmentinsurance` - Transaction is related to a payment of government insurance.  * `Insurancepremiumcar` - Transaction is a payment of car insurance premium.  * `Laborinsurance` - Transaction is a payment of labor insurance.  * `Lifeinsurance` - Transaction is a payment of life insurance.  * `Propertyinsurance` - Transaction is a payment of property insurance.  * `Healthinsurance` - Transaction is a payment of health insurance.  * `Carloanprincipalrepayment` - Transaction is a payment of car loan principal payment.  * `Housingloanrepayment` - Transaction is related to a payment of housing loan.  * `Companysocialloanpaymenttobank` - Transaction is a payment by a company to a bank for financing social loans to employees.  * `Estatetax` - Transaction is related to a payment of estate tax.  * `Housingtax` - Transaction is related to a payment of housing tax.  * `Incometax` - Transaction is related to a payment of income tax.  * `Netincometax` - Transaction is related to a payment of net income tax.  * `Businessexpenses` - Transaction is related to a payment of business expenses.  * `Trustfund` - Transaction is related to a payment of a trust fund.  * `Networkcharge` - Transaction is related to a payment of network charges.  * `Networkcommunication` - Transaction is related to a payment of network communication.  * `Receiptpayment` - Transaction is related to a payment of receipt.  * `Paymentterms` - Transaction is related to payment terms specifications.  * `Other` - Other payment purpose.  * `Withholding` - Transaction is related to a payment of withholding tax.  
type Paymentpurposevalues string

// List of Paymentpurposevalues
const (
	SALARYPAYMENT Paymentpurposevalues = "Salarypayment"
	TREASURYPAYMENT Paymentpurposevalues = "Treasurypayment"
	ADVANCEPAYMENT Paymentpurposevalues = "Advancepayment"
	AGRICULTURALTRANSFER Paymentpurposevalues = "Agriculturaltransfer"
	ALIMONYPAYMENT Paymentpurposevalues = "Alimonypayment"
	CHILDBENEFIT Paymentpurposevalues = "Childbenefit"
	UNEMPLOYMENTDISABILITYBENEFIT Paymentpurposevalues = "Unemploymentdisabilitybenefit"
	BONUSPAYMENT Paymentpurposevalues = "Bonuspayment."
	CASHMANAGEMENTTRANSFER Paymentpurposevalues = "Cashmanagementtransfer"
	CAPITALBUILDING Paymentpurposevalues = "Capitalbuilding"
	CHARITYPAYMENT Paymentpurposevalues = "Charitypayment"
	COLLECTIONPAYMENT Paymentpurposevalues = "Collectionpayment"
	COMMODITYTRANSFER Paymentpurposevalues = "Commoditytransfer"
	COMMERCIALPAYMENT Paymentpurposevalues = "Commercialpayment"
	COMMISSION Paymentpurposevalues = "Commission"
	COSTS Paymentpurposevalues = "Costs"
	COPYRIGHT Paymentpurposevalues = "Copyright"
	DIVIDEND Paymentpurposevalues = "Dividend"
	FOREIGNEXCHANGE Paymentpurposevalues = "Foreignexchange"
	PURCHASESALEOFGOODS Paymentpurposevalues = "Purchasesaleofgoods"
	GOVERNMENTPAYMENT Paymentpurposevalues = "Governmentpayment"
	INSTALMENTHIREPURCHASEAGREEMENT Paymentpurposevalues = "Instalmenthirepurchaseagreement"
	INTRACOMPANYPAYMENT Paymentpurposevalues = "Intracompanypayment"
	INSURANCEPREMIUM Paymentpurposevalues = "Insurancepremium"
	INTEREST Paymentpurposevalues = "Interest"
	LICENSEFEE Paymentpurposevalues = "Licensefee"
	LOAN Paymentpurposevalues = "Loan"
	LOANREPAYMENT Paymentpurposevalues = "Loanrepayment"
	NETTING Paymentpurposevalues = "Netting"
	PAYROLL Paymentpurposevalues = "Payroll"
	PENSIONPAYMENT Paymentpurposevalues = "Pensionpayment"
	REFUND Paymentpurposevalues = "Refund"
	RENT Paymentpurposevalues = "Rent"
	ROYALTIES Paymentpurposevalues = "Royalties"
	PURCHASESALEOFSERVICES Paymentpurposevalues = "Purchasesaleofservices"
	SECURITIES Paymentpurposevalues = "Securities"
	SOCIALSECURITYBENEFIT Paymentpurposevalues = "Socialsecuritybenefit"
	SUBSCRIPTION Paymentpurposevalues = "Subscription"
	TAXPAYMENT Paymentpurposevalues = "Taxpayment"
	VALUEADDEDTAXPAYMENT Paymentpurposevalues = "Valueaddedtaxpayment"
	CONSUMERTHIRDPARTYCONSOLIDATEDPAYMENT Paymentpurposevalues = "Consumerthirdpartyconsolidatedpayment"
	DEBITCOLLECTIONPAYMENT Paymentpurposevalues = "Debitcollectionpayment"
	SUPPLIERPAYMENT Paymentpurposevalues = "Supplierpayment"
	HEDGING Paymentpurposevalues = "Hedging"
	MULTIPLESERVICETYPES Paymentpurposevalues = "Multipleservicetypes"
	NOTOTHERWISESPECIFIED Paymentpurposevalues = "Nototherwisespecified"
	CARDPAYMENT Paymentpurposevalues = "Cardpayment"
	CREDITCARDBILL Paymentpurposevalues = "Creditcardbill"
	FERRY Paymentpurposevalues = "Ferry"
	AIR Paymentpurposevalues = "Air"
	BUS Paymentpurposevalues = "Bus"
	RAILWAY Paymentpurposevalues = "Railway"
	CONVALESCENTCAREFACILITY Paymentpurposevalues = "Convalescentcarefacility"
	DENTALSERVICES Paymentpurposevalues = "Dentalservices"
	ANESTHESIASERVICES Paymentpurposevalues = "Anesthesiaservices"
	HOMEHEALTHCARE Paymentpurposevalues = "Homehealthcare"
	HOSPITALCARE Paymentpurposevalues = "Hospitalcare"
	INTERMEDIATECAREFACILITY Paymentpurposevalues = "Intermediatecarefacility"
	LONGTERMCAREFACILITY Paymentpurposevalues = "Longtermcarefacility"
	MEDICALSERVICES Paymentpurposevalues = "Medicalservices"
	VISIONCARE Paymentpurposevalues = "Visioncare"
	DURABLEMEDICALEEQUIPMENT Paymentpurposevalues = "Durablemedicaleequipment"
	CABLETVBILL Paymentpurposevalues = "Cabletvbill"
	ELECTRICITYBILL Paymentpurposevalues = "Electricitybill"
	GASBILL Paymentpurposevalues = "Gasbill"
	TELEPHONEBILL Paymentpurposevalues = "Telephonebill"
	OTHERTELECOMRELATEDBILL Paymentpurposevalues = "Othertelecomrelatedbill"
	WATERBILL Paymentpurposevalues = "Waterbill"
	STUDY Paymentpurposevalues = "Study"
	PRICEPAYMENT Paymentpurposevalues = "Pricepayment"
	INSTALLMENT Paymentpurposevalues = "Installment"
	RECURRINGINSTALLMENTPAYMENT Paymentpurposevalues = "Recurringinstallmentpayment"
	OPENINGFEE Paymentpurposevalues = "Openingfee"
	CANCELLATIONFEE Paymentpurposevalues = "Cancellationfee"
	GOVERNMENTINSURANCE Paymentpurposevalues = "Governmentinsurance"
	INSURANCEPREMIUMCAR Paymentpurposevalues = "Insurancepremiumcar"
	LABORINSURANCE Paymentpurposevalues = "Laborinsurance"
	LIFEINSURANCE Paymentpurposevalues = "Lifeinsurance"
	PROPERTYINSURANCE Paymentpurposevalues = "Propertyinsurance"
	HEALTHINSURANCE Paymentpurposevalues = "Healthinsurance"
	CARLOANPRINCIPALREPAYMENT Paymentpurposevalues = "Carloanprincipalrepayment"
	HOUSINGLOANREPAYMENT Paymentpurposevalues = "Housingloanrepayment"
	COMPANYSOCIALLOANPAYMENTTOBANK Paymentpurposevalues = "Companysocialloanpaymenttobank"
	ESTATETAX Paymentpurposevalues = "Estatetax"
	HOUSINGTAX Paymentpurposevalues = "Housingtax"
	INCOMETAX Paymentpurposevalues = "Incometax"
	NETINCOMETAX Paymentpurposevalues = "Netincometax"
	BUSINESSEXPENSES Paymentpurposevalues = "Businessexpenses"
	TRUSTFUND Paymentpurposevalues = "Trustfund"
	NETWORKCHARGE Paymentpurposevalues = "Networkcharge"
	NETWORKCOMMUNICATION Paymentpurposevalues = "Networkcommunication"
	RECEIPTPAYMENT Paymentpurposevalues = "Receiptpayment"
	PAYMENTTERMS Paymentpurposevalues = "Paymentterms"
	OTHER Paymentpurposevalues = "Other"
	WITHHOLDING Paymentpurposevalues = "Withholding"
)

// AllowedPaymentpurposevaluesEnumValues is all the allowed values of Paymentpurposevalues enum
var AllowedPaymentpurposevaluesEnumValues = []Paymentpurposevalues{
	"Salarypayment",
	"Treasurypayment",
	"Advancepayment",
	"Agriculturaltransfer",
	"Alimonypayment",
	"Childbenefit",
	"Unemploymentdisabilitybenefit",
	"Bonuspayment.",
	"Cashmanagementtransfer",
	"Capitalbuilding",
	"Charitypayment",
	"Collectionpayment",
	"Commoditytransfer",
	"Commercialpayment",
	"Commission",
	"Costs",
	"Copyright",
	"Dividend",
	"Foreignexchange",
	"Purchasesaleofgoods",
	"Governmentpayment",
	"Instalmenthirepurchaseagreement",
	"Intracompanypayment",
	"Insurancepremium",
	"Interest",
	"Licensefee",
	"Loan",
	"Loanrepayment",
	"Netting",
	"Payroll",
	"Pensionpayment",
	"Refund",
	"Rent",
	"Royalties",
	"Purchasesaleofservices",
	"Securities",
	"Socialsecuritybenefit",
	"Subscription",
	"Taxpayment",
	"Valueaddedtaxpayment",
	"Consumerthirdpartyconsolidatedpayment",
	"Debitcollectionpayment",
	"Supplierpayment",
	"Hedging",
	"Multipleservicetypes",
	"Nototherwisespecified",
	"Cardpayment",
	"Creditcardbill",
	"Ferry",
	"Air",
	"Bus",
	"Railway",
	"Convalescentcarefacility",
	"Dentalservices",
	"Anesthesiaservices",
	"Homehealthcare",
	"Hospitalcare",
	"Intermediatecarefacility",
	"Longtermcarefacility",
	"Medicalservices",
	"Visioncare",
	"Durablemedicaleequipment",
	"Cabletvbill",
	"Electricitybill",
	"Gasbill",
	"Telephonebill",
	"Othertelecomrelatedbill",
	"Waterbill",
	"Study",
	"Pricepayment",
	"Installment",
	"Recurringinstallmentpayment",
	"Openingfee",
	"Cancellationfee",
	"Governmentinsurance",
	"Insurancepremiumcar",
	"Laborinsurance",
	"Lifeinsurance",
	"Propertyinsurance",
	"Healthinsurance",
	"Carloanprincipalrepayment",
	"Housingloanrepayment",
	"Companysocialloanpaymenttobank",
	"Estatetax",
	"Housingtax",
	"Incometax",
	"Netincometax",
	"Businessexpenses",
	"Trustfund",
	"Networkcharge",
	"Networkcommunication",
	"Receiptpayment",
	"Paymentterms",
	"Other",
	"Withholding",
}

// validPaymentpurposevaluesEnumValue provides a map of Paymentpurposevaluess for fast verification of use input
var validPaymentpurposevaluesEnumValues = map[Paymentpurposevalues]struct{}{
	"Salarypayment": {},
	"Treasurypayment": {},
	"Advancepayment": {},
	"Agriculturaltransfer": {},
	"Alimonypayment": {},
	"Childbenefit": {},
	"Unemploymentdisabilitybenefit": {},
	"Bonuspayment.": {},
	"Cashmanagementtransfer": {},
	"Capitalbuilding": {},
	"Charitypayment": {},
	"Collectionpayment": {},
	"Commoditytransfer": {},
	"Commercialpayment": {},
	"Commission": {},
	"Costs": {},
	"Copyright": {},
	"Dividend": {},
	"Foreignexchange": {},
	"Purchasesaleofgoods": {},
	"Governmentpayment": {},
	"Instalmenthirepurchaseagreement": {},
	"Intracompanypayment": {},
	"Insurancepremium": {},
	"Interest": {},
	"Licensefee": {},
	"Loan": {},
	"Loanrepayment": {},
	"Netting": {},
	"Payroll": {},
	"Pensionpayment": {},
	"Refund": {},
	"Rent": {},
	"Royalties": {},
	"Purchasesaleofservices": {},
	"Securities": {},
	"Socialsecuritybenefit": {},
	"Subscription": {},
	"Taxpayment": {},
	"Valueaddedtaxpayment": {},
	"Consumerthirdpartyconsolidatedpayment": {},
	"Debitcollectionpayment": {},
	"Supplierpayment": {},
	"Hedging": {},
	"Multipleservicetypes": {},
	"Nototherwisespecified": {},
	"Cardpayment": {},
	"Creditcardbill": {},
	"Ferry": {},
	"Air": {},
	"Bus": {},
	"Railway": {},
	"Convalescentcarefacility": {},
	"Dentalservices": {},
	"Anesthesiaservices": {},
	"Homehealthcare": {},
	"Hospitalcare": {},
	"Intermediatecarefacility": {},
	"Longtermcarefacility": {},
	"Medicalservices": {},
	"Visioncare": {},
	"Durablemedicaleequipment": {},
	"Cabletvbill": {},
	"Electricitybill": {},
	"Gasbill": {},
	"Telephonebill": {},
	"Othertelecomrelatedbill": {},
	"Waterbill": {},
	"Study": {},
	"Pricepayment": {},
	"Installment": {},
	"Recurringinstallmentpayment": {},
	"Openingfee": {},
	"Cancellationfee": {},
	"Governmentinsurance": {},
	"Insurancepremiumcar": {},
	"Laborinsurance": {},
	"Lifeinsurance": {},
	"Propertyinsurance": {},
	"Healthinsurance": {},
	"Carloanprincipalrepayment": {},
	"Housingloanrepayment": {},
	"Companysocialloanpaymenttobank": {},
	"Estatetax": {},
	"Housingtax": {},
	"Incometax": {},
	"Netincometax": {},
	"Businessexpenses": {},
	"Trustfund": {},
	"Networkcharge": {},
	"Networkcommunication": {},
	"Receiptpayment": {},
	"Paymentterms": {},
	"Other": {},
	"Withholding": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Paymentpurposevalues) IsValid() bool {
	_, ok := validPaymentpurposevaluesEnumValues[v]
	return ok
}

// NewPaymentpurposevaluesFromValue returns a pointer to a valid Paymentpurposevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPaymentpurposevaluesFromValue(v string) (Paymentpurposevalues, error) {
	ev := Paymentpurposevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Paymentpurposevalues: valid values are %v", v, AllowedPaymentpurposevaluesEnumValues)
}



// AssertPaymentpurposevaluesRequired checks if the required fields are not zero-ed
func AssertPaymentpurposevaluesRequired(obj Paymentpurposevalues) error {
	return nil
}

// AssertPaymentpurposevaluesConstraints checks if the values respects the defined constraints
func AssertPaymentpurposevaluesConstraints(obj Paymentpurposevalues) error {
	return nil
}
