// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Priorityvaluetypes : >  * `Urgent` - Priority level is urgent (highest priority possible).  * `High` - Priority level is high.  * `Normal` - Priority level is normal.  * `Low` - Priority level is low.  
type Priorityvaluetypes string

// List of Priorityvaluetypes
const (
	URGENT Priorityvaluetypes = "Urgent"
	HIGH Priorityvaluetypes = "High"
	NORMAL Priorityvaluetypes = "Normal"
	LOW Priorityvaluetypes = "Low"
)

// AllowedPriorityvaluetypesEnumValues is all the allowed values of Priorityvaluetypes enum
var AllowedPriorityvaluetypesEnumValues = []Priorityvaluetypes{
	"Urgent",
	"High",
	"Normal",
	"Low",
}

// validPriorityvaluetypesEnumValue provides a map of Priorityvaluetypess for fast verification of use input
var validPriorityvaluetypesEnumValues = map[Priorityvaluetypes]struct{}{
	"Urgent": {},
	"High": {},
	"Normal": {},
	"Low": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Priorityvaluetypes) IsValid() bool {
	_, ok := validPriorityvaluetypesEnumValues[v]
	return ok
}

// NewPriorityvaluetypesFromValue returns a pointer to a valid Priorityvaluetypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPriorityvaluetypesFromValue(v string) (Priorityvaluetypes, error) {
	ev := Priorityvaluetypes(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Priorityvaluetypes: valid values are %v", v, AllowedPriorityvaluetypesEnumValues)
}



// AssertPriorityvaluetypesRequired checks if the required fields are not zero-ed
func AssertPriorityvaluetypesRequired(obj Priorityvaluetypes) error {
	return nil
}

// AssertPriorityvaluetypesConstraints checks if the values respects the defined constraints
func AssertPriorityvaluetypesConstraints(obj Priorityvaluetypes) error {
	return nil
}
