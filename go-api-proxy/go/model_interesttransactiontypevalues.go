// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Interesttransactiontypevalues : >  * `InterestAllocationTransaction` -   * `InterestPaymentTransaction` -   * `InterestAdjustmentTransaction` -   
type Interesttransactiontypevalues string

// List of Interesttransactiontypevalues
const (
	INTEREST_ALLOCATION_TRANSACTION Interesttransactiontypevalues = "InterestAllocationTransaction"
	INTEREST_PAYMENT_TRANSACTION Interesttransactiontypevalues = "InterestPaymentTransaction"
	INTEREST_ADJUSTMENT_TRANSACTION Interesttransactiontypevalues = "InterestAdjustmentTransaction"
)

// AllowedInteresttransactiontypevaluesEnumValues is all the allowed values of Interesttransactiontypevalues enum
var AllowedInteresttransactiontypevaluesEnumValues = []Interesttransactiontypevalues{
	"InterestAllocationTransaction",
	"InterestPaymentTransaction",
	"InterestAdjustmentTransaction",
}

// validInteresttransactiontypevaluesEnumValue provides a map of Interesttransactiontypevaluess for fast verification of use input
var validInteresttransactiontypevaluesEnumValues = map[Interesttransactiontypevalues]struct{}{
	"InterestAllocationTransaction": {},
	"InterestPaymentTransaction": {},
	"InterestAdjustmentTransaction": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Interesttransactiontypevalues) IsValid() bool {
	_, ok := validInteresttransactiontypevaluesEnumValues[v]
	return ok
}

// NewInteresttransactiontypevaluesFromValue returns a pointer to a valid Interesttransactiontypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewInteresttransactiontypevaluesFromValue(v string) (Interesttransactiontypevalues, error) {
	ev := Interesttransactiontypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Interesttransactiontypevalues: valid values are %v", v, AllowedInteresttransactiontypevaluesEnumValues)
}



// AssertInteresttransactiontypevaluesRequired checks if the required fields are not zero-ed
func AssertInteresttransactiontypevaluesRequired(obj Interesttransactiontypevalues) error {
	return nil
}

// AssertInteresttransactiontypevaluesConstraints checks if the values respects the defined constraints
func AssertInteresttransactiontypevaluesConstraints(obj Interesttransactiontypevalues) error {
	return nil
}
