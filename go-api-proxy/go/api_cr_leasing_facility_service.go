// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// CRLeasingFacilityAPIService is a service that implements the logic for the CRLeasingFacilityAPIServicer
// This service should implement the business logic for every endpoint for the CRLeasingFacilityAPI API.
// Include any external packages or services that will be required by this service.
type CRLeasingFacilityAPIService struct {
}

// NewCRLeasingFacilityAPIService creates a default api service
func NewCRLeasingFacilityAPIService() *CRLeasingFacilityAPIService {
	return &CRLeasingFacilityAPIService{}
}

// Control - CoCR Control the processing of Leasing Facility
func (s *CRLeasingFacilityAPIService) Control(ctx context.Context, leasingid string, leasingFacility LeasingFacility) (ImplResponse, error) {
	// TODO - update Control with the required logic for this service method.
	// Add api_cr_leasing_facility_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LeasingFacility{}) or use other options such as http.Ok ...
	// return Response(200, LeasingFacility{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Control method not implemented")
}

// Exchange - EcCR Accept, verify, etc. aspects of Leasing Facility processing
func (s *CRLeasingFacilityAPIService) Exchange(ctx context.Context, leasingid string, leasingFacility LeasingFacility) (ImplResponse, error) {
	// TODO - update Exchange with the required logic for this service method.
	// Add api_cr_leasing_facility_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LeasingFacility{}) or use other options such as http.Ok ...
	// return Response(200, LeasingFacility{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Exchange method not implemented")
}

// Execute - ExCR Execute an available automated action for Leasing Facility
func (s *CRLeasingFacilityAPIService) Execute(ctx context.Context, leasingid string, leasingFacility LeasingFacility) (ImplResponse, error) {
	// TODO - update Execute with the required logic for this service method.
	// Add api_cr_leasing_facility_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LeasingFacility{}) or use other options such as http.Ok ...
	// return Response(200, LeasingFacility{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Execute method not implemented")
}

// Initiate - InCR Instantiate a new Leasing Facility
func (s *CRLeasingFacilityAPIService) Initiate(ctx context.Context, leasingFacility LeasingFacility) (ImplResponse, error) {
	// TODO - update Initiate with the required logic for this service method.
	// Add api_cr_leasing_facility_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LeasingFacility{}) or use other options such as http.Ok ...
	// return Response(200, LeasingFacility{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Initiate method not implemented")
}

// Retrieve - ReCR Retrieve details about any aspect of Leasing Facility
func (s *CRLeasingFacilityAPIService) Retrieve(ctx context.Context, leasingid string) (ImplResponse, error) {
	// TODO - update Retrieve with the required logic for this service method.
	// Add api_cr_leasing_facility_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LeasingFacility{}) or use other options such as http.Ok ...
	// return Response(200, LeasingFacility{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Retrieve method not implemented")
}

// Request - RqCR Request manual intervention or a decision with respect to Leasing Facility
func (s *CRLeasingFacilityAPIService) Request(ctx context.Context, leasingid string, leasingFacility LeasingFacility) (ImplResponse, error) {
	// TODO - update Request with the required logic for this service method.
	// Add api_cr_leasing_facility_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LeasingFacility{}) or use other options such as http.Ok ...
	// return Response(200, LeasingFacility{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Request method not implemented")
}

// Update - UpCR Update details relating to Leasing Facility
func (s *CRLeasingFacilityAPIService) Update(ctx context.Context, leasingid string, leasingFacility LeasingFacility) (ImplResponse, error) {
	// TODO - update Update with the required logic for this service method.
	// Add api_cr_leasing_facility_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LeasingFacility{}) or use other options such as http.Ok ...
	// return Response(200, LeasingFacility{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("Update method not implemented")
}
