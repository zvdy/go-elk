// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// BQCorporateActionAPIService is a service that implements the logic for the BQCorporateActionAPIServicer
// This service should implement the business logic for every endpoint for the BQCorporateActionAPI API.
// Include any external packages or services that will be required by this service.
type BQCorporateActionAPIService struct {
}

// NewBQCorporateActionAPIService creates a default api service
func NewBQCorporateActionAPIService() *BQCorporateActionAPIService {
	return &BQCorporateActionAPIService{}
}

// InitiateCorporateAction - InBQ Instantiate a new Corporate Action
func (s *BQCorporateActionAPIService) InitiateCorporateAction(ctx context.Context, leasingid string, corporateAction CorporateAction) (ImplResponse, error) {
	// TODO - update InitiateCorporateAction with the required logic for this service method.
	// Add api_bq_corporate_action_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CorporateAction{}) or use other options such as http.Ok ...
	// return Response(200, CorporateAction{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("InitiateCorporateAction method not implemented")
}

// RetrieveCorporateAction - ReBQ Retrieve details about any aspect of Corporate Action
func (s *BQCorporateActionAPIService) RetrieveCorporateAction(ctx context.Context, leasingid string, corporateactionid string) (ImplResponse, error) {
	// TODO - update RetrieveCorporateAction with the required logic for this service method.
	// Add api_bq_corporate_action_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CorporateAction{}) or use other options such as http.Ok ...
	// return Response(200, CorporateAction{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveCorporateAction method not implemented")
}

// UpdateCorporateAction - UpBQ Update details relating to Corporate Action
func (s *BQCorporateActionAPIService) UpdateCorporateAction(ctx context.Context, leasingid string, corporateactionid string, corporateAction CorporateAction) (ImplResponse, error) {
	// TODO - update UpdateCorporateAction with the required logic for this service method.
	// Add api_bq_corporate_action_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CorporateAction{}) or use other options such as http.Ok ...
	// return Response(200, CorporateAction{}), nil

	// TODO: Uncomment the next line to return response Response(400, HttpError{}) or use other options such as http.Ok ...
	// return Response(400, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(401, HttpError{}) or use other options such as http.Ok ...
	// return Response(401, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(403, HttpError{}) or use other options such as http.Ok ...
	// return Response(403, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(404, HttpError{}) or use other options such as http.Ok ...
	// return Response(404, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(429, HttpError{}) or use other options such as http.Ok ...
	// return Response(429, HttpError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HttpError{}) or use other options such as http.Ok ...
	// return Response(500, HttpError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateCorporateAction method not implemented")
}
