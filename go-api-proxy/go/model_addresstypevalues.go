// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Addresstypevalues : >  * `PostalAddress` -   * `GeolocationAddress` -   * `LatitudeAddress` -   * `LongitudeAddress` -   * `ElectronicAddress` -   
type Addresstypevalues string

// List of Addresstypevalues
const (
	POSTAL_ADDRESS Addresstypevalues = "PostalAddress"
	GEOLOCATION_ADDRESS Addresstypevalues = "GeolocationAddress"
	LATITUDE_ADDRESS Addresstypevalues = "LatitudeAddress"
	LONGITUDE_ADDRESS Addresstypevalues = "LongitudeAddress"
	ELECTRONIC_ADDRESS Addresstypevalues = "ElectronicAddress"
)

// AllowedAddresstypevaluesEnumValues is all the allowed values of Addresstypevalues enum
var AllowedAddresstypevaluesEnumValues = []Addresstypevalues{
	"PostalAddress",
	"GeolocationAddress",
	"LatitudeAddress",
	"LongitudeAddress",
	"ElectronicAddress",
}

// validAddresstypevaluesEnumValue provides a map of Addresstypevaluess for fast verification of use input
var validAddresstypevaluesEnumValues = map[Addresstypevalues]struct{}{
	"PostalAddress": {},
	"GeolocationAddress": {},
	"LatitudeAddress": {},
	"LongitudeAddress": {},
	"ElectronicAddress": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Addresstypevalues) IsValid() bool {
	_, ok := validAddresstypevaluesEnumValues[v]
	return ok
}

// NewAddresstypevaluesFromValue returns a pointer to a valid Addresstypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAddresstypevaluesFromValue(v string) (Addresstypevalues, error) {
	ev := Addresstypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Addresstypevalues: valid values are %v", v, AllowedAddresstypevaluesEnumValues)
}



// AssertAddresstypevaluesRequired checks if the required fields are not zero-ed
func AssertAddresstypevaluesRequired(obj Addresstypevalues) error {
	return nil
}

// AssertAddresstypevaluesConstraints checks if the values respects the defined constraints
func AssertAddresstypevaluesConstraints(obj Addresstypevalues) error {
	return nil
}
