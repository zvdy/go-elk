// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Paymenttransactionstatustypevalues : >  * `Acceptedtechnicalvalidation` - Authentication and syntactical and semantical validation are successful.  * `Received` - Payment initiation has been received by the receiving agent.  * `Partiallyaccepted` - A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.  * `Rejected` - Payment initiation or individual transaction included in the payment initiation has been rejected.  * `Pending` - Payment initiation or individual transaction included in the payment initiation is pending.  Further checks and status update will be performed.  * `Acceptedcustomerprofile` - Preceding check of technical validation was successful. Customer profile check was also successful.  * `Acceptedsettlementinprocess` - All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.  * `Acceptedsettlementcompleted` - Settlement on the debtor's account has been completed.  * `Accepted` - Request is accepted.  * `Acceptedcancellationrequest` - Cancellation is accepted.  * `Rejectedcancellationrequest` - Cancellation request is rejected  * `Acceptedwithchange` - Instruction is accepted but a change will be made, such as date or remittance not sent.  * `Partiallyacceptedcancellationrequest` - Cancellation is partially accepted.  * `Pendingcancellationrequest` - Cancellation request is pending.  * `Acceptedcreditsettlementcompleted` - Settlement on the creditor's account has been completed.  * `Paymentcancelled` - Payment is cancelled.  * `Nocancellationprocess` - There is no cancellation process ongoing  
type Paymenttransactionstatustypevalues string

// List of Paymenttransactionstatustypevalues
const (
	ACCEPTEDTECHNICALVALIDATION Paymenttransactionstatustypevalues = "Acceptedtechnicalvalidation"
	RECEIVED Paymenttransactionstatustypevalues = "Received"
	PARTIALLYACCEPTED Paymenttransactionstatustypevalues = "Partiallyaccepted"
	REJECTED Paymenttransactionstatustypevalues = "Rejected"
	PENDING Paymenttransactionstatustypevalues = "Pending"
	ACCEPTEDCUSTOMERPROFILE Paymenttransactionstatustypevalues = "Acceptedcustomerprofile"
	ACCEPTEDSETTLEMENTINPROCESS Paymenttransactionstatustypevalues = "Acceptedsettlementinprocess"
	ACCEPTEDSETTLEMENTCOMPLETED Paymenttransactionstatustypevalues = "Acceptedsettlementcompleted"
	ACCEPTED Paymenttransactionstatustypevalues = "Accepted"
	ACCEPTEDCANCELLATIONREQUEST Paymenttransactionstatustypevalues = "Acceptedcancellationrequest"
	REJECTEDCANCELLATIONREQUEST Paymenttransactionstatustypevalues = "Rejectedcancellationrequest"
	ACCEPTEDWITHCHANGE Paymenttransactionstatustypevalues = "Acceptedwithchange"
	PARTIALLYACCEPTEDCANCELLATIONREQUEST Paymenttransactionstatustypevalues = "Partiallyacceptedcancellationrequest"
	PENDINGCANCELLATIONREQUEST Paymenttransactionstatustypevalues = "Pendingcancellationrequest"
	ACCEPTEDCREDITSETTLEMENTCOMPLETED Paymenttransactionstatustypevalues = "Acceptedcreditsettlementcompleted"
	PAYMENTCANCELLED Paymenttransactionstatustypevalues = "Paymentcancelled"
	NOCANCELLATIONPROCESS Paymenttransactionstatustypevalues = "Nocancellationprocess"
)

// AllowedPaymenttransactionstatustypevaluesEnumValues is all the allowed values of Paymenttransactionstatustypevalues enum
var AllowedPaymenttransactionstatustypevaluesEnumValues = []Paymenttransactionstatustypevalues{
	"Acceptedtechnicalvalidation",
	"Received",
	"Partiallyaccepted",
	"Rejected",
	"Pending",
	"Acceptedcustomerprofile",
	"Acceptedsettlementinprocess",
	"Acceptedsettlementcompleted",
	"Accepted",
	"Acceptedcancellationrequest",
	"Rejectedcancellationrequest",
	"Acceptedwithchange",
	"Partiallyacceptedcancellationrequest",
	"Pendingcancellationrequest",
	"Acceptedcreditsettlementcompleted",
	"Paymentcancelled",
	"Nocancellationprocess",
}

// validPaymenttransactionstatustypevaluesEnumValue provides a map of Paymenttransactionstatustypevaluess for fast verification of use input
var validPaymenttransactionstatustypevaluesEnumValues = map[Paymenttransactionstatustypevalues]struct{}{
	"Acceptedtechnicalvalidation": {},
	"Received": {},
	"Partiallyaccepted": {},
	"Rejected": {},
	"Pending": {},
	"Acceptedcustomerprofile": {},
	"Acceptedsettlementinprocess": {},
	"Acceptedsettlementcompleted": {},
	"Accepted": {},
	"Acceptedcancellationrequest": {},
	"Rejectedcancellationrequest": {},
	"Acceptedwithchange": {},
	"Partiallyacceptedcancellationrequest": {},
	"Pendingcancellationrequest": {},
	"Acceptedcreditsettlementcompleted": {},
	"Paymentcancelled": {},
	"Nocancellationprocess": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Paymenttransactionstatustypevalues) IsValid() bool {
	_, ok := validPaymenttransactionstatustypevaluesEnumValues[v]
	return ok
}

// NewPaymenttransactionstatustypevaluesFromValue returns a pointer to a valid Paymenttransactionstatustypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPaymenttransactionstatustypevaluesFromValue(v string) (Paymenttransactionstatustypevalues, error) {
	ev := Paymenttransactionstatustypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Paymenttransactionstatustypevalues: valid values are %v", v, AllowedPaymenttransactionstatustypevaluesEnumValues)
}



// AssertPaymenttransactionstatustypevaluesRequired checks if the required fields are not zero-ed
func AssertPaymenttransactionstatustypevaluesRequired(obj Paymenttransactionstatustypevalues) error {
	return nil
}

// AssertPaymenttransactionstatustypevaluesConstraints checks if the values respects the defined constraints
func AssertPaymenttransactionstatustypevaluesConstraints(obj Paymenttransactionstatustypevalues) error {
	return nil
}
