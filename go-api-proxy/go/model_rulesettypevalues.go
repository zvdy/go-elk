// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Rulesettypevalues : A Classification that distinguishes between the regularity domains of Leasing Arrangement ||  |
type Rulesettypevalues string

// List of Rulesettypevalues
const (
	POLICY Rulesettypevalues = "Policy"
	REGULATION Rulesettypevalues = "Regulation"
	LAW Rulesettypevalues = "Law"
	GUIDELINE Rulesettypevalues = "Guideline"
	CRITERION Rulesettypevalues = "Criterion"
	STANDARD Rulesettypevalues = "Standard"
)

// AllowedRulesettypevaluesEnumValues is all the allowed values of Rulesettypevalues enum
var AllowedRulesettypevaluesEnumValues = []Rulesettypevalues{
	"Policy",
	"Regulation",
	"Law",
	"Guideline",
	"Criterion",
	"Standard",
}

// validRulesettypevaluesEnumValue provides a map of Rulesettypevaluess for fast verification of use input
var validRulesettypevaluesEnumValues = map[Rulesettypevalues]struct{}{
	"Policy": {},
	"Regulation": {},
	"Law": {},
	"Guideline": {},
	"Criterion": {},
	"Standard": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Rulesettypevalues) IsValid() bool {
	_, ok := validRulesettypevaluesEnumValues[v]
	return ok
}

// NewRulesettypevaluesFromValue returns a pointer to a valid Rulesettypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRulesettypevaluesFromValue(v string) (Rulesettypevalues, error) {
	ev := Rulesettypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Rulesettypevalues: valid values are %v", v, AllowedRulesettypevaluesEnumValues)
}



// AssertRulesettypevaluesRequired checks if the required fields are not zero-ed
func AssertRulesettypevaluesRequired(obj Rulesettypevalues) error {
	return nil
}

// AssertRulesettypevaluesConstraints checks if the values respects the defined constraints
func AssertRulesettypevaluesConstraints(obj Rulesettypevalues) error {
	return nil
}
