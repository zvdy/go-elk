// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Feepaymentmethodtypevalues : >  * `Cash` - Payment is with cash.  * `Unit` - Units are redeemed to cover payment.  
type Feepaymentmethodtypevalues string

// List of Feepaymentmethodtypevalues
const (
	CASH Feepaymentmethodtypevalues = "Cash"
	UNIT Feepaymentmethodtypevalues = "Unit"
)

// AllowedFeepaymentmethodtypevaluesEnumValues is all the allowed values of Feepaymentmethodtypevalues enum
var AllowedFeepaymentmethodtypevaluesEnumValues = []Feepaymentmethodtypevalues{
	"Cash",
	"Unit",
}

// validFeepaymentmethodtypevaluesEnumValue provides a map of Feepaymentmethodtypevaluess for fast verification of use input
var validFeepaymentmethodtypevaluesEnumValues = map[Feepaymentmethodtypevalues]struct{}{
	"Cash": {},
	"Unit": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Feepaymentmethodtypevalues) IsValid() bool {
	_, ok := validFeepaymentmethodtypevaluesEnumValues[v]
	return ok
}

// NewFeepaymentmethodtypevaluesFromValue returns a pointer to a valid Feepaymentmethodtypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFeepaymentmethodtypevaluesFromValue(v string) (Feepaymentmethodtypevalues, error) {
	ev := Feepaymentmethodtypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Feepaymentmethodtypevalues: valid values are %v", v, AllowedFeepaymentmethodtypevaluesEnumValues)
}



// AssertFeepaymentmethodtypevaluesRequired checks if the required fields are not zero-ed
func AssertFeepaymentmethodtypevaluesRequired(obj Feepaymentmethodtypevalues) error {
	return nil
}

// AssertFeepaymentmethodtypevaluesConstraints checks if the values respects the defined constraints
func AssertFeepaymentmethodtypevaluesConstraints(obj Feepaymentmethodtypevalues) error {
	return nil
}
