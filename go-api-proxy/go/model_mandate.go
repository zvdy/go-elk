// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi




// Mandate - Confirmation that the sweep processing is sanctioned as necessary
type Mandate struct {

	Status Mandatestatus `json:"Status,omitempty"`

	// Specifies the number of days the mandate must be tracked. (ISO20022)
	TrackingDays float64 `json:"TrackingDays,omitempty"`

	Identification Identifier `json:"Identification,omitempty"`

	Type Mandatetypevalues `json:"Type,omitempty"`

	Duration Datetimeperiod `json:"Duration,omitempty"`

	TrackingIndicator Yesnoindicator `json:"TrackingIndicator,omitempty"`
}

// AssertMandateRequired checks if the required fields are not zero-ed
func AssertMandateRequired(obj Mandate) error {
	if err := AssertMandatestatusRequired(obj.Status); err != nil {
		return err
	}
	if err := AssertIdentifierRequired(obj.Identification); err != nil {
		return err
	}
	if err := AssertDatetimeperiodRequired(obj.Duration); err != nil {
		return err
	}
	if err := AssertYesnoindicatorRequired(obj.TrackingIndicator); err != nil {
		return err
	}
	return nil
}

// AssertMandateConstraints checks if the values respects the defined constraints
func AssertMandateConstraints(obj Mandate) error {
	if err := AssertMandatestatusConstraints(obj.Status); err != nil {
		return err
	}
	if err := AssertIdentifierConstraints(obj.Identification); err != nil {
		return err
	}
	if err := AssertDatetimeperiodConstraints(obj.Duration); err != nil {
		return err
	}
	if err := AssertYesnoindicatorConstraints(obj.TrackingIndicator); err != nil {
		return err
	}
	return nil
}
