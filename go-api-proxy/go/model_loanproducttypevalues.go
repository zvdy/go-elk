// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Loanproducttypevalues : The type of Leasing Arrangement ||  |
type Loanproducttypevalues string

// List of Loanproducttypevalues
const (
	CONSUMER_LOAN Loanproducttypevalues = "ConsumerLoan"
	CORPORATE_LOAN Loanproducttypevalues = "CorporateLoan"
	MERCHANDISING_LOAN Loanproducttypevalues = "MerchandisingLoan"
	MORTGAGE_LOAN Loanproducttypevalues = "MortgageLoan"
	SYNDICATED_LOAN Loanproducttypevalues = "SyndicatedLoan"
)

// AllowedLoanproducttypevaluesEnumValues is all the allowed values of Loanproducttypevalues enum
var AllowedLoanproducttypevaluesEnumValues = []Loanproducttypevalues{
	"ConsumerLoan",
	"CorporateLoan",
	"MerchandisingLoan",
	"MortgageLoan",
	"SyndicatedLoan",
}

// validLoanproducttypevaluesEnumValue provides a map of Loanproducttypevaluess for fast verification of use input
var validLoanproducttypevaluesEnumValues = map[Loanproducttypevalues]struct{}{
	"ConsumerLoan": {},
	"CorporateLoan": {},
	"MerchandisingLoan": {},
	"MortgageLoan": {},
	"SyndicatedLoan": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Loanproducttypevalues) IsValid() bool {
	_, ok := validLoanproducttypevaluesEnumValues[v]
	return ok
}

// NewLoanproducttypevaluesFromValue returns a pointer to a valid Loanproducttypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLoanproducttypevaluesFromValue(v string) (Loanproducttypevalues, error) {
	ev := Loanproducttypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Loanproducttypevalues: valid values are %v", v, AllowedLoanproducttypevaluesEnumValues)
}



// AssertLoanproducttypevaluesRequired checks if the required fields are not zero-ed
func AssertLoanproducttypevaluesRequired(obj Loanproducttypevalues) error {
	return nil
}

// AssertLoanproducttypevaluesConstraints checks if the values respects the defined constraints
func AssertLoanproducttypevaluesConstraints(obj Loanproducttypevalues) error {
	return nil
}
