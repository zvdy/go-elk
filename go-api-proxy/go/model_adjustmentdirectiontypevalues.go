// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Adjustmentdirectiontypevalues : >  * `Added` - Adjustment amount must be added to the total amount.  * `Substracted` - Adjustment amount must be substracted from the total amount.  
type Adjustmentdirectiontypevalues string

// List of Adjustmentdirectiontypevalues
const (
	ADDED Adjustmentdirectiontypevalues = "Added"
	SUBSTRACTED Adjustmentdirectiontypevalues = "Substracted"
)

// AllowedAdjustmentdirectiontypevaluesEnumValues is all the allowed values of Adjustmentdirectiontypevalues enum
var AllowedAdjustmentdirectiontypevaluesEnumValues = []Adjustmentdirectiontypevalues{
	"Added",
	"Substracted",
}

// validAdjustmentdirectiontypevaluesEnumValue provides a map of Adjustmentdirectiontypevaluess for fast verification of use input
var validAdjustmentdirectiontypevaluesEnumValues = map[Adjustmentdirectiontypevalues]struct{}{
	"Added": {},
	"Substracted": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Adjustmentdirectiontypevalues) IsValid() bool {
	_, ok := validAdjustmentdirectiontypevaluesEnumValues[v]
	return ok
}

// NewAdjustmentdirectiontypevaluesFromValue returns a pointer to a valid Adjustmentdirectiontypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAdjustmentdirectiontypevaluesFromValue(v string) (Adjustmentdirectiontypevalues, error) {
	ev := Adjustmentdirectiontypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Adjustmentdirectiontypevalues: valid values are %v", v, AllowedAdjustmentdirectiontypevaluesEnumValues)
}



// AssertAdjustmentdirectiontypevaluesRequired checks if the required fields are not zero-ed
func AssertAdjustmentdirectiontypevaluesRequired(obj Adjustmentdirectiontypevalues) error {
	return nil
}

// AssertAdjustmentdirectiontypevaluesConstraints checks if the values respects the defined constraints
func AssertAdjustmentdirectiontypevaluesConstraints(obj Adjustmentdirectiontypevalues) error {
	return nil
}
