// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Arrangementlifecyclestatustypevalues : >  * `Requested` -   * `Proposed` -   * `Offered` -   * `Accepted` -   * `Cancelled` -   * `Fulfilled` -   * `Terminated` -   
type Arrangementlifecyclestatustypevalues string

// List of Arrangementlifecyclestatustypevalues
const (
	REQUESTED Arrangementlifecyclestatustypevalues = "Requested"
	PROPOSED Arrangementlifecyclestatustypevalues = "Proposed"
	OFFERED Arrangementlifecyclestatustypevalues = "Offered"
	ACCEPTED Arrangementlifecyclestatustypevalues = "Accepted"
	CANCELLED Arrangementlifecyclestatustypevalues = "Cancelled"
	FULFILLED Arrangementlifecyclestatustypevalues = "Fulfilled"
	TERMINATED Arrangementlifecyclestatustypevalues = "Terminated"
)

// AllowedArrangementlifecyclestatustypevaluesEnumValues is all the allowed values of Arrangementlifecyclestatustypevalues enum
var AllowedArrangementlifecyclestatustypevaluesEnumValues = []Arrangementlifecyclestatustypevalues{
	"Requested",
	"Proposed",
	"Offered",
	"Accepted",
	"Cancelled",
	"Fulfilled",
	"Terminated",
}

// validArrangementlifecyclestatustypevaluesEnumValue provides a map of Arrangementlifecyclestatustypevaluess for fast verification of use input
var validArrangementlifecyclestatustypevaluesEnumValues = map[Arrangementlifecyclestatustypevalues]struct{}{
	"Requested": {},
	"Proposed": {},
	"Offered": {},
	"Accepted": {},
	"Cancelled": {},
	"Fulfilled": {},
	"Terminated": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Arrangementlifecyclestatustypevalues) IsValid() bool {
	_, ok := validArrangementlifecyclestatustypevaluesEnumValues[v]
	return ok
}

// NewArrangementlifecyclestatustypevaluesFromValue returns a pointer to a valid Arrangementlifecyclestatustypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewArrangementlifecyclestatustypevaluesFromValue(v string) (Arrangementlifecyclestatustypevalues, error) {
	ev := Arrangementlifecyclestatustypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Arrangementlifecyclestatustypevalues: valid values are %v", v, AllowedArrangementlifecyclestatustypevaluesEnumValues)
}



// AssertArrangementlifecyclestatustypevaluesRequired checks if the required fields are not zero-ed
func AssertArrangementlifecyclestatustypevaluesRequired(obj Arrangementlifecyclestatustypevalues) error {
	return nil
}

// AssertArrangementlifecyclestatustypevaluesConstraints checks if the values respects the defined constraints
func AssertArrangementlifecyclestatustypevaluesConstraints(obj Arrangementlifecyclestatustypevalues) error {
	return nil
}
