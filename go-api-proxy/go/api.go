// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi

import (
	"context"
	"net/http"
)



// BQClearingandSettlementAPIRouter defines the required methods for binding the api requests to a responses for the BQClearingandSettlementAPI
// The BQClearingandSettlementAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQClearingandSettlementAPIServicer to perform the required actions, then write the service results to the http response.
type BQClearingandSettlementAPIRouter interface { 
	RetrieveClearingandSettlement(http.ResponseWriter, *http.Request)
	UpdateClearingandSettlement(http.ResponseWriter, *http.Request)
}
// BQCollateralAPIRouter defines the required methods for binding the api requests to a responses for the BQCollateralAPI
// The BQCollateralAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQCollateralAPIServicer to perform the required actions, then write the service results to the http response.
type BQCollateralAPIRouter interface { 
	InitiateCollateral(http.ResponseWriter, *http.Request)
	RetrieveCollateral(http.ResponseWriter, *http.Request)
	RequestCollateral(http.ResponseWriter, *http.Request)
	UpdateCollateral(http.ResponseWriter, *http.Request)
}
// BQCorporateActionAPIRouter defines the required methods for binding the api requests to a responses for the BQCorporateActionAPI
// The BQCorporateActionAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQCorporateActionAPIServicer to perform the required actions, then write the service results to the http response.
type BQCorporateActionAPIRouter interface { 
	InitiateCorporateAction(http.ResponseWriter, *http.Request)
	RetrieveCorporateAction(http.ResponseWriter, *http.Request)
	UpdateCorporateAction(http.ResponseWriter, *http.Request)
}
// BQDepositsAPIRouter defines the required methods for binding the api requests to a responses for the BQDepositsAPI
// The BQDepositsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQDepositsAPIServicer to perform the required actions, then write the service results to the http response.
type BQDepositsAPIRouter interface { 
	InitiateDeposits(http.ResponseWriter, *http.Request)
	RetrieveDeposits(http.ResponseWriter, *http.Request)
	UpdateDeposits(http.ResponseWriter, *http.Request)
}
// BQFeesAPIRouter defines the required methods for binding the api requests to a responses for the BQFeesAPI
// The BQFeesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQFeesAPIServicer to perform the required actions, then write the service results to the http response.
type BQFeesAPIRouter interface { 
	ExchangeFees(http.ResponseWriter, *http.Request)
	InitiateFees(http.ResponseWriter, *http.Request)
	RetrieveFees(http.ResponseWriter, *http.Request)
	RequestFees(http.ResponseWriter, *http.Request)
	UpdateFees(http.ResponseWriter, *http.Request)
}
// BQFinancialInstrumentAPIRouter defines the required methods for binding the api requests to a responses for the BQFinancialInstrumentAPI
// The BQFinancialInstrumentAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQFinancialInstrumentAPIServicer to perform the required actions, then write the service results to the http response.
type BQFinancialInstrumentAPIRouter interface { 
	InitiateFinancialInstrument(http.ResponseWriter, *http.Request)
	RetrieveFinancialInstrument(http.ResponseWriter, *http.Request)
	UpdateFinancialInstrument(http.ResponseWriter, *http.Request)
}
// BQInterestAPIRouter defines the required methods for binding the api requests to a responses for the BQInterestAPI
// The BQInterestAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQInterestAPIServicer to perform the required actions, then write the service results to the http response.
type BQInterestAPIRouter interface { 
	RetrieveInterest(http.ResponseWriter, *http.Request)
	UpdateInterest(http.ResponseWriter, *http.Request)
}
// BQIssuedDeviceAPIRouter defines the required methods for binding the api requests to a responses for the BQIssuedDeviceAPI
// The BQIssuedDeviceAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQIssuedDeviceAPIServicer to perform the required actions, then write the service results to the http response.
type BQIssuedDeviceAPIRouter interface { 
	InitiateIssuedDevice(http.ResponseWriter, *http.Request)
	RetrieveIssuedDevice(http.ResponseWriter, *http.Request)
	UpdateIssuedDevice(http.ResponseWriter, *http.Request)
}
// BQLienAPIRouter defines the required methods for binding the api requests to a responses for the BQLienAPI
// The BQLienAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQLienAPIServicer to perform the required actions, then write the service results to the http response.
type BQLienAPIRouter interface { 
	ExchangeLien(http.ResponseWriter, *http.Request)
	InitiateLien(http.ResponseWriter, *http.Request)
	RetrieveLien(http.ResponseWriter, *http.Request)
	UpdateLien(http.ResponseWriter, *http.Request)
}
// BQPaymentsAPIRouter defines the required methods for binding the api requests to a responses for the BQPaymentsAPI
// The BQPaymentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQPaymentsAPIServicer to perform the required actions, then write the service results to the http response.
type BQPaymentsAPIRouter interface { 
	ExchangePayments(http.ResponseWriter, *http.Request)
	InitiatePayments(http.ResponseWriter, *http.Request)
	RetrievePayments(http.ResponseWriter, *http.Request)
	UpdatePayments(http.ResponseWriter, *http.Request)
}
// BQSweepAPIRouter defines the required methods for binding the api requests to a responses for the BQSweepAPI
// The BQSweepAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQSweepAPIServicer to perform the required actions, then write the service results to the http response.
type BQSweepAPIRouter interface { 
	ExchangeSweep(http.ResponseWriter, *http.Request)
	InitiateSweep(http.ResponseWriter, *http.Request)
	RetrieveSweep(http.ResponseWriter, *http.Request)
	UpdateSweep(http.ResponseWriter, *http.Request)
}
// BQWithdrawalsAPIRouter defines the required methods for binding the api requests to a responses for the BQWithdrawalsAPI
// The BQWithdrawalsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BQWithdrawalsAPIServicer to perform the required actions, then write the service results to the http response.
type BQWithdrawalsAPIRouter interface { 
	InitiateWithdrawals(http.ResponseWriter, *http.Request)
	RetrieveWithdrawals(http.ResponseWriter, *http.Request)
	UpdateWithdrawals(http.ResponseWriter, *http.Request)
}
// CRLeasingFacilityAPIRouter defines the required methods for binding the api requests to a responses for the CRLeasingFacilityAPI
// The CRLeasingFacilityAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CRLeasingFacilityAPIServicer to perform the required actions, then write the service results to the http response.
type CRLeasingFacilityAPIRouter interface { 
	Control(http.ResponseWriter, *http.Request)
	Exchange(http.ResponseWriter, *http.Request)
	Execute(http.ResponseWriter, *http.Request)
	Initiate(http.ResponseWriter, *http.Request)
	Retrieve(http.ResponseWriter, *http.Request)
	Request(http.ResponseWriter, *http.Request)
	Update(http.ResponseWriter, *http.Request)
}


// BQClearingandSettlementAPIServicer defines the api actions for the BQClearingandSettlementAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQClearingandSettlementAPIServicer interface { 
	RetrieveClearingandSettlement(context.Context, string, string) (ImplResponse, error)
	UpdateClearingandSettlement(context.Context, string, string, ClearingandSettlement) (ImplResponse, error)
}


// BQCollateralAPIServicer defines the api actions for the BQCollateralAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQCollateralAPIServicer interface { 
	InitiateCollateral(context.Context, string, Collateral) (ImplResponse, error)
	RetrieveCollateral(context.Context, string, string) (ImplResponse, error)
	RequestCollateral(context.Context, string, string, Collateral) (ImplResponse, error)
	UpdateCollateral(context.Context, string, string, Collateral) (ImplResponse, error)
}


// BQCorporateActionAPIServicer defines the api actions for the BQCorporateActionAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQCorporateActionAPIServicer interface { 
	InitiateCorporateAction(context.Context, string, CorporateAction) (ImplResponse, error)
	RetrieveCorporateAction(context.Context, string, string) (ImplResponse, error)
	UpdateCorporateAction(context.Context, string, string, CorporateAction) (ImplResponse, error)
}


// BQDepositsAPIServicer defines the api actions for the BQDepositsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQDepositsAPIServicer interface { 
	InitiateDeposits(context.Context, string, Deposits) (ImplResponse, error)
	RetrieveDeposits(context.Context, string, string) (ImplResponse, error)
	UpdateDeposits(context.Context, string, string, Deposits) (ImplResponse, error)
}


// BQFeesAPIServicer defines the api actions for the BQFeesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQFeesAPIServicer interface { 
	ExchangeFees(context.Context, string, string, Fees) (ImplResponse, error)
	InitiateFees(context.Context, string, Fees) (ImplResponse, error)
	RetrieveFees(context.Context, string, string) (ImplResponse, error)
	RequestFees(context.Context, string, string, Fees) (ImplResponse, error)
	UpdateFees(context.Context, string, string, Fees) (ImplResponse, error)
}


// BQFinancialInstrumentAPIServicer defines the api actions for the BQFinancialInstrumentAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQFinancialInstrumentAPIServicer interface { 
	InitiateFinancialInstrument(context.Context, string, FinancialInstrument) (ImplResponse, error)
	RetrieveFinancialInstrument(context.Context, string, string) (ImplResponse, error)
	UpdateFinancialInstrument(context.Context, string, string, FinancialInstrument) (ImplResponse, error)
}


// BQInterestAPIServicer defines the api actions for the BQInterestAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQInterestAPIServicer interface { 
	RetrieveInterest(context.Context, string, string) (ImplResponse, error)
	UpdateInterest(context.Context, string, string, Interest) (ImplResponse, error)
}


// BQIssuedDeviceAPIServicer defines the api actions for the BQIssuedDeviceAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQIssuedDeviceAPIServicer interface { 
	InitiateIssuedDevice(context.Context, string, IssuedDevice) (ImplResponse, error)
	RetrieveIssuedDevice(context.Context, string, string) (ImplResponse, error)
	UpdateIssuedDevice(context.Context, string, string, IssuedDevice) (ImplResponse, error)
}


// BQLienAPIServicer defines the api actions for the BQLienAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQLienAPIServicer interface { 
	ExchangeLien(context.Context, string, string, Lien) (ImplResponse, error)
	InitiateLien(context.Context, string, Lien) (ImplResponse, error)
	RetrieveLien(context.Context, string, string) (ImplResponse, error)
	UpdateLien(context.Context, string, string, Lien) (ImplResponse, error)
}


// BQPaymentsAPIServicer defines the api actions for the BQPaymentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQPaymentsAPIServicer interface { 
	ExchangePayments(context.Context, string, string, Payments) (ImplResponse, error)
	InitiatePayments(context.Context, string, Payments) (ImplResponse, error)
	RetrievePayments(context.Context, string, string) (ImplResponse, error)
	UpdatePayments(context.Context, string, string, Payments) (ImplResponse, error)
}


// BQSweepAPIServicer defines the api actions for the BQSweepAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQSweepAPIServicer interface { 
	ExchangeSweep(context.Context, string, string, Sweep) (ImplResponse, error)
	InitiateSweep(context.Context, string, Sweep) (ImplResponse, error)
	RetrieveSweep(context.Context, string, string) (ImplResponse, error)
	UpdateSweep(context.Context, string, string, Sweep) (ImplResponse, error)
}


// BQWithdrawalsAPIServicer defines the api actions for the BQWithdrawalsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BQWithdrawalsAPIServicer interface { 
	InitiateWithdrawals(context.Context, string, Withdrawals) (ImplResponse, error)
	RetrieveWithdrawals(context.Context, string, string) (ImplResponse, error)
	UpdateWithdrawals(context.Context, string, string, Withdrawals) (ImplResponse, error)
}


// CRLeasingFacilityAPIServicer defines the api actions for the CRLeasingFacilityAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CRLeasingFacilityAPIServicer interface { 
	Control(context.Context, string, LeasingFacility) (ImplResponse, error)
	Exchange(context.Context, string, LeasingFacility) (ImplResponse, error)
	Execute(context.Context, string, LeasingFacility) (ImplResponse, error)
	Initiate(context.Context, LeasingFacility) (ImplResponse, error)
	Retrieve(context.Context, string) (ImplResponse, error)
	Request(context.Context, string, LeasingFacility) (ImplResponse, error)
	Update(context.Context, string, LeasingFacility) (ImplResponse, error)
}
