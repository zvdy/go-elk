// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Partyinvolvementtypevalues : >  * `Agreementinvolvement` -   * `Partyinvolvement` -   * `Arrangementinvolvement` -   * `Designspecificationinvolvement` -   * `Relationshipinvolvement` -   * `Locationinvolvement` -   * `Bankguaranteeinvolvement` -   
type Partyinvolvementtypevalues string

// List of Partyinvolvementtypevalues
const (
	AGREEMENTINVOLVEMENT Partyinvolvementtypevalues = "Agreementinvolvement"
	PARTYINVOLVEMENT Partyinvolvementtypevalues = "Partyinvolvement"
	ARRANGEMENTINVOLVEMENT Partyinvolvementtypevalues = "Arrangementinvolvement"
	DESIGNSPECIFICATIONINVOLVEMENT Partyinvolvementtypevalues = "Designspecificationinvolvement"
	RELATIONSHIPINVOLVEMENT Partyinvolvementtypevalues = "Relationshipinvolvement"
	LOCATIONINVOLVEMENT Partyinvolvementtypevalues = "Locationinvolvement"
	BANKGUARANTEEINVOLVEMENT Partyinvolvementtypevalues = "Bankguaranteeinvolvement"
)

// AllowedPartyinvolvementtypevaluesEnumValues is all the allowed values of Partyinvolvementtypevalues enum
var AllowedPartyinvolvementtypevaluesEnumValues = []Partyinvolvementtypevalues{
	"Agreementinvolvement",
	"Partyinvolvement",
	"Arrangementinvolvement",
	"Designspecificationinvolvement",
	"Relationshipinvolvement",
	"Locationinvolvement",
	"Bankguaranteeinvolvement",
}

// validPartyinvolvementtypevaluesEnumValue provides a map of Partyinvolvementtypevaluess for fast verification of use input
var validPartyinvolvementtypevaluesEnumValues = map[Partyinvolvementtypevalues]struct{}{
	"Agreementinvolvement": {},
	"Partyinvolvement": {},
	"Arrangementinvolvement": {},
	"Designspecificationinvolvement": {},
	"Relationshipinvolvement": {},
	"Locationinvolvement": {},
	"Bankguaranteeinvolvement": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Partyinvolvementtypevalues) IsValid() bool {
	_, ok := validPartyinvolvementtypevaluesEnumValues[v]
	return ok
}

// NewPartyinvolvementtypevaluesFromValue returns a pointer to a valid Partyinvolvementtypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPartyinvolvementtypevaluesFromValue(v string) (Partyinvolvementtypevalues, error) {
	ev := Partyinvolvementtypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Partyinvolvementtypevalues: valid values are %v", v, AllowedPartyinvolvementtypevaluesEnumValues)
}



// AssertPartyinvolvementtypevaluesRequired checks if the required fields are not zero-ed
func AssertPartyinvolvementtypevaluesRequired(obj Partyinvolvementtypevalues) error {
	return nil
}

// AssertPartyinvolvementtypevaluesConstraints checks if the values respects the defined constraints
func AssertPartyinvolvementtypevaluesConstraints(obj Partyinvolvementtypevalues) error {
	return nil
}
