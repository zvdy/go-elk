// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Leasing
 *
 * The leasing products enables customers to finance equipment purchases using the leased item as collateral when necessary
 *
 * API version: 12.0.0
 */

package openapi


import (
	"fmt"
)


// Mandatestatustypevalues : >  * `Accepted` -   * `Rejected` -   
type Mandatestatustypevalues string

// List of Mandatestatustypevalues
const (
	ACCEPTED Mandatestatustypevalues = "Accepted"
	REJECTED Mandatestatustypevalues = "Rejected"
)

// AllowedMandatestatustypevaluesEnumValues is all the allowed values of Mandatestatustypevalues enum
var AllowedMandatestatustypevaluesEnumValues = []Mandatestatustypevalues{
	"Accepted",
	"Rejected",
}

// validMandatestatustypevaluesEnumValue provides a map of Mandatestatustypevaluess for fast verification of use input
var validMandatestatustypevaluesEnumValues = map[Mandatestatustypevalues]struct{}{
	"Accepted": {},
	"Rejected": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Mandatestatustypevalues) IsValid() bool {
	_, ok := validMandatestatustypevaluesEnumValues[v]
	return ok
}

// NewMandatestatustypevaluesFromValue returns a pointer to a valid Mandatestatustypevalues
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMandatestatustypevaluesFromValue(v string) (Mandatestatustypevalues, error) {
	ev := Mandatestatustypevalues(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for Mandatestatustypevalues: valid values are %v", v, AllowedMandatestatustypevaluesEnumValues)
}



// AssertMandatestatustypevaluesRequired checks if the required fields are not zero-ed
func AssertMandatestatustypevaluesRequired(obj Mandatestatustypevalues) error {
	return nil
}

// AssertMandatestatustypevaluesConstraints checks if the values respects the defined constraints
func AssertMandatestatustypevaluesConstraints(obj Mandatestatustypevalues) error {
	return nil
}
